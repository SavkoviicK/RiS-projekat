package com.veterinarska.stanica.config;

import com.veterinarska.stanica.security.JwtAuthFilter;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

@Configuration
public class SecurityConfig {

    private final JwtAuthFilter jwtAuthFilter;

    public SecurityConfig(JwtAuthFilter jwtAuthFilter) {
        this.jwtAuthFilter = jwtAuthFilter;
    }

    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }

    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http
            .csrf(csrf -> csrf.disable())
            .sessionManagement(sm -> sm.sessionCreationPolicy(SessionCreationPolicy.STATELESS))
            .authorizeHttpRequests(auth -> auth
                // ===== PUBLIC =====
                .requestMatchers("/api/ping").permitAll()
                .requestMatchers("/api/auth/**").permitAll()
                .requestMatchers("/api/korisnici/registracija").permitAll()
                .requestMatchers("/v3/api-docs/**", "/swagger-ui.html", "/swagger-ui/**").permitAll()
                .requestMatchers("/api/whoami").permitAll()

                // ===== MEDICINSKI ZAPISI (VETERINAR) =====
               // .requestMatchers(HttpMethod.POST, "/api/medicinski-zapisi").hasRole("VETERINAR")
                .requestMatchers(HttpMethod.POST, "/api/medicinski-zapisi/**").hasRole("VETERINAR")
             //   .requestMatchers("/api/medicinski-zapisi/**").hasRole("VETERINAR")

                // ===== USLUGE (ADMIN) =====
                .requestMatchers("/api/usluge", "/api/usluge/**").hasRole("ADMIN")

                // ===== PREGLEDI =====
                .requestMatchers(HttpMethod.PATCH,  "/api/pregledi/**").hasRole("VETERINAR")
                .requestMatchers(HttpMethod.POST,   "/api/pregledi/**").hasRole("VLASNIK")
                .requestMatchers(HttpMethod.PUT,    "/api/pregledi/**").hasRole("VLASNIK")
                .requestMatchers(HttpMethod.DELETE, "/api/pregledi/**").hasRole("VLASNIK")
                .requestMatchers(HttpMethod.GET,    "/api/pregledi/**")
                    .hasAnyRole("VLASNIK","VETERINAR","ADMIN")

                // ===== LJUBIMCI (VLASNIK) =====
                .requestMatchers("/api/ljubimci/**").hasRole("VLASNIK")

                // ===== IZVEÅ TAJI (ADMIN) =====
                .requestMatchers("/api/izvestaji/**").hasRole("ADMIN")

                // ===== SVE OSTALO =====
                .anyRequest().authenticated()
            )
            .addFilterBefore(jwtAuthFilter, UsernamePasswordAuthenticationFilter.class);

        return http.build();
    }
}
