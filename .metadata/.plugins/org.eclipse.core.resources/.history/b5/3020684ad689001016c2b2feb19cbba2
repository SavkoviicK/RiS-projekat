<%@ page contentType="text/html; charset=UTF-8" %>
<!DOCTYPE html>
<html lang="sr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Poruke</title>
  <style>
    body{font-family:system-ui,Arial;margin:0;background:#f7f9fb}
    header{display:flex;align-items:center;justify-content:space-between;gap:16px;
           padding:16px 24px;background:#fff;border-bottom:1px solid #e6e6e6}
    .wrap{max-width:900px;margin:24px auto;padding:0 16px}
    nav a{margin-right:12px;text-decoration:none;color:#0b5ed7}
    table{width:100%;border-collapse:collapse;background:#fff;border:1px solid #e6e6e6}
    th,td{padding:10px;border-top:1px solid #eee;text-align:left}
    thead tr{background:#f2f4f7}
    .card{background:#fff;border:1px solid #e6e6e6;border-radius:12px;padding:16px;margin:16px 0}
    .row{display:flex;gap:12px;align-items:center;flex-wrap:wrap}
    input,textarea,select{width:100%;padding:10px;border:1px solid #dcdcdc;border-radius:8px;background:#fff}
    button{background:#0b5ed7;color:#fff;border:none;border-radius:8px;padding:10px 16px;cursor:pointer}
    button:disabled{opacity:.6;cursor:not-allowed}
    .muted{color:#666;font-size:.9em}
    .hint{font-size:.9em;color:#444}
    .link{color:#0b5ed7;cursor:pointer;text-decoration:underline}
  </style>
  <script defer src="/js/auth.js"></script>
</head>
<body>
<header>
  <div style="display:flex;align-items:center;gap:12px">
    <img src="/img/logo.png" alt="Logo" style="height:46px" />
    <strong>Veterinarska stanica</strong>
  </div>
  <nav>
    <a href="/">Poƒçetna</a>
    <a href="/ljubimci">Ljubimci</a>
    <a href="/pregledi">Pregledi</a>
    <a href="/poruke">Poruke</a>
    <a id="navIzvestaji" href="/izvestaji" style="display:none">Izve≈°taji</a>
  </nav>
  <div id="userBox"><span id="userInfo"></span>
    <button id="btnLogout" style="display:none;margin-left:8px">Odjava</button>
  </div>
</header>

<div class="wrap">
  <h1>üí¨ Poruke</h1>

  <div id="info" class="muted" style="margin:6px 0 16px 0"></div>

  <!-- PRIV ZONA -->
  <div id="privPoruke" style="display:none">
    <!-- Slanje poruke -->
    <div id="sendCard" class="card">
      <h3>Po≈°alji novu poruku</h3>

      <div class="row">
        <label style="min-width:120px">Primalac</label>
        <select id="selPrimalac" style="min-width:300px">
          <option value="">‚Äî uƒçitavam primaoce ‚Äî</option>
        </select>
        <span class="hint" id="recHint"></span>
      </div>

      <div class="row" id="manualRow" style="display:none">
        <label style="min-width:120px">ID primaoca (ruƒçno)</label>
        <input id="manualId" type="number" placeholder="npr. 5" style="max-width:140px">
        <span class="muted">Koristi samo ako lista nije dostupna.</span>
      </div>

      <div class="hint" style="margin:6px 0">
        Nema≈° nekog na listi? <span class="link" id="toggleManual">Unesi ID ruƒçno</span>
      </div>

      <div style="height:8px"></div>
      <div>
        <textarea id="inpSadrzaj" rows="3" placeholder="Unesi poruku..."></textarea>
      </div>
      <div style="height:12px"></div>
      <button id="btnSend">Po≈°alji</button>
      <span id="sendMsg" class="muted" style="margin-left:8px"></span>
    </div>

    <!-- Lista poruka -->
    <div class="card">
      <h3>Va≈°e poruke</h3>
      <div id="listMsg" class="muted" style="margin-bottom:8px">Uƒçitavam‚Ä¶</div>
      <table id="tbl">
        <thead>
          <tr>
            <th>ID</th>
            <th>Od</th>
            <th>Za</th>
            <th>Sadr≈æaj</th>
            <th>Datum</th>
          </tr>
        </thead>
        <tbody id="rows">
          <tr><td colspan="5">Uƒçitavam‚Ä¶</td></tr>
        </tbody>
      </table>
    </div>
  </div>
</div>

<script>
// --- Header info + ‚ÄúIzve≈°taji‚Äù samo ADMIN-u
(function headerPaint(){
  const info=document.getElementById('userInfo');
  const btn=document.getElementById('btnLogout');
  const navIzv=document.getElementById('navIzvestaji');

  const t=localStorage.getItem('jwt');
  const roles=JSON.parse(localStorage.getItem('roles')||'[]');

  if(t){
    const rolesNice = roles.map(r => String(r.authority||r).replace(/^ROLE_/, ''));
    const txt = rolesNice.length ? 'Prijavljen ('+rolesNice.join(', ')+')' : 'Prijavljen';
    info.textContent = txt;
    btn.style.display='inline-block';
    btn.onclick=()=>{ logout(); location.href='/'; };
  }else{
    info.innerHTML='<a href="/prijava">Prijavi se</a>';
    btn.style.display='none';
  }

  const isAdmin = roles.some(r=>r.authority==='ROLE_ADMIN');
  if(navIzv) navIzv.style.display = isAdmin ? 'inline' : 'none';
})();

function fmtDate(val){
  if(!val) return '';
  try{
    const d = new Date(val);
    if (Number.isNaN(d.getTime())) return String(val);
    return d.toLocaleString();
  }catch(_){ return String(val); }
}

/* ---------- ROLE helpers ---------- */
function currentRoleNames(){
  try{
    const roles = JSON.parse(localStorage.getItem('roles')||'[]');
    return roles.map(r => String(r.authority||r).replace(/^ROLE_/, '').toUpperCase());
  }catch(_){ return []; }
}
function canUseMessages(){
  const names = currentRoleNames();
  return names.includes('VLASNIK') || names.includes('VETERINAR') || names.includes('ADMIN');
}

/* ---------- Lista poruka ---------- */
async function loadPoruke(){
  const rows  = document.getElementById('rows');
  const listMsg = document.getElementById('listMsg');
  const priv  = document.getElementById('privPoruke');
  const info  = document.getElementById('info');
  const sendCard = document.getElementById('sendCard');

  if(!localStorage.getItem('jwt')){
    info.innerHTML = 'Niste prijavljeni. <a href="/prijava">Prijavite se</a>.';
    if (priv) priv.style.display='none';
    return;
  }
  if (!canUseMessages()){
    info.textContent = 'Ova sekcija je dostupna samo ovla≈°ƒáenim korisnicima.';
    if (priv) priv.style.display='none';
    return;
  }

  info.textContent = '';
  if (priv) priv.style.display='';
  if (sendCard) sendCard.style.display='';

  rows.innerHTML = '<tr><td colspan="5">Uƒçitavam‚Ä¶</td></tr>';

  try{
    const data = await fetchJSON('/api/poruke', { headers: authHeader() }, 'listMsg', null, { appendServerText:false });
    if(!Array.isArray(data) || data.length===0){
      listMsg.textContent = 'Nema poruka.';
      rows.innerHTML = '';
      return;
    }
    listMsg.textContent = '';
    rows.innerHTML = data.map(p =>
      '<tr>'
        + '<td>' + (p.id ?? '') + '</td>'
        + '<td>' + (p.posiljalacEmail ? p.posiljalacEmail : ('#' + (p.posiljalacId ?? ''))) + '</td>'
        + '<td>' + (p.primalacEmail   ? p.primalacEmail   : ('#' + (p.primalacId   ?? ''))) + '</td>'
        + '<td>' + (p.sadrzaj ?? '') + '</td>'
        + '<td>' + fmtDate(p.vreme || p.datum) + '</td>'
      + '</tr>'
    ).join('');
  }catch(_){
    if (priv) priv.style.display='none';
    rows.innerHTML = '';
  }
}

/* ---------- Normalizacija korisnika/rola ---------- */
function _normRoleNames(u) {
  if (!u) return [];
  if (Array.isArray(u)) return u.map(r => String(r.authority || r.naziv || r.role || r).replace(/^ROLE_/,'').toUpperCase());
  if (typeof u === 'object') {
    if (Array.isArray(u.authorities)) return _normRoleNames(u.authorities);
    if (Array.isArray(u.roles))       return _normRoleNames(u.roles);
    if (Array.isArray(u.uloge))       return _normRoleNames(u.uloge);
  }
  return [];
}
function _normUser(raw) {
  const id    = raw.id ?? raw.userId ?? raw.korisnikId ?? raw.veterinarId ?? raw.vlasnikId;
  const email = raw.email || raw.username || raw.korisnikEmail || raw.mail || '';
  const ime   = raw.ime ? (raw.prezime ? (raw.ime + ' ' + raw.prezime) : raw.ime)
                        : (raw.naziv || raw.displayName || '');
  const roles = _normRoleNames(raw.authorities || raw.roles || raw.uloge || raw.privilegije || raw.rola);
  return { id, email, ime, roles };
}

/* ---------- Uƒçitavanje primaoca (bez novih kontrolera) ---------- */
<script>
async function loadPrimaoci(){
  const sel  = document.getElementById('selPrimalac');
  const hint = document.getElementById('recHint');
  sel.disabled = true;
  sel.innerHTML = '<option value="">Uƒçitavam‚Ä¶</option>';
  hint.textContent = '';

  if(!localStorage.getItem('jwt')){
    sel.innerHTML = '<option value="">‚Äî prvo se prijavite ‚Äî</option>';
    sel.disabled = false;
    return;
  }

  const my = currentRoleNames();
  // Odredi server endpoint
  let url = '/api/korisnici';
  if (my.includes('VLASNIK'))   url = '/api/korisnici?rola=VETERINAR';
  else if (my.includes('VETERINAR')) url = '/api/korisnici?rola=VLASNIK';
  // ADMIN: ostaje /api/korisnici

  // Ako URL veƒá sadr≈æi ?rola= znaƒçi da je SERVER veƒá filtrirao ‚Üí neƒáemo dodatno klijentski filtrirati
  const serverFiltered = url.includes('?rola=');

  let lista = [];
  try{
    lista = await fetchJSON(url, { headers: authHeader() }, 'listMsg', null, { appendServerText:false });
  }catch(_){
    sel.innerHTML = '<option value="">Gre≈°ka pri uƒçitavanju</option>';
    sel.disabled = false;
    return;
  }

  // Normalizuj osnovna polja (id, email, ime) ‚Äì uloge nam sada nisu potrebne ako je server filtrirao
  let users = (Array.isArray(lista) ? lista : []).map(raw => {
    const id    = raw.id ?? raw.userId ?? raw.korisnikId ?? raw.veterinarId ?? raw.vlasnikId;
    const email = raw.email || raw.username || raw.korisnikEmail || raw.mail || '';
    const ime   = raw.ime ? (raw.prezime ? (raw.ime + ' ' + raw.prezime) : raw.ime)
                          : (raw.naziv || raw.displayName || '');
    const roles = []; // ignori≈°emo klijentske uloge u ovom koraku
    return { id, email, ime, roles };
  }).filter(u => u.id && u.email);

  // Samo ako SERVER NIJE filtrirao, uradi grubo klijentsko filtriranje (fallback)
  if (!serverFiltered) {
    const target =
      my.includes('VLASNIK')   ? 'VETERINAR' :
      my.includes('VETERINAR') ? 'VLASNIK'   :
      null;

    if (target) {
      // poku≈°aj da proƒçita≈° uloge iz itema (ako postoje)
      const normRoles = (u)=> (u || []).map(r => String(r.authority||r).replace(/^ROLE_/,'').toUpperCase());
      users = (lista || []).map(raw => {
        const id    = raw.id ?? raw.userId ?? raw.korisnikId ?? raw.veterinarId ?? raw.vlasnikId;
        const email = raw.email || raw.username || raw.korisnikEmail || raw.mail || '';
        const ime   = raw.ime ? (raw.prezime ? (raw.ime + ' ' + raw.prezime) : raw.ime)
                              : (raw.naziv || raw.displayName || '');
        const roles = normRoles(raw.authorities || raw.roles || raw.uloge);
        return { id, email, ime, roles };
      }).filter(u => u.id && u.email && (u.roles.includes(target) || u.roles.includes('ADMIN')));
    }
  }

  if (users.length === 0){
    sel.innerHTML = '<option value="">Nema dostupnih primalaca</option>';
    sel.disabled = false;
    hint.textContent = 'Nema korisnika druge uloge. Koristi ‚ÄûUnesi ID ruƒçno‚Äú.';
    return;
  }

  sel.innerHTML = '<option value="">‚Äî izaberi primaoca ‚Äî</option>';
  users.forEach(u=>{
    const opt = document.createElement('option');
    opt.value = String(u.id);
    opt.textContent = (u.ime ? (u.ime+' ‚Äì ') : '') + u.email + ' (#'+u.id+')';
    sel.appendChild(opt);
  });
  sel.disabled = false;
  hint.textContent = ''; // po ≈æelji: 'Izvor: ' + url
}
</script>

/* ---------- Toggle za ruƒçni ID + rezolucija primaoca ---------- */
(function setupManualToggle(){
  const link = document.getElementById('toggleManual');
  const row  = document.getElementById('manualRow');
  if(!link || !row) return;
  link.addEventListener('click', ()=>{
    const on = row.style.display !== 'none';
    row.style.display = on ? 'none' : 'flex';
    link.textContent = on ? 'Unesi ID ruƒçno' : 'Sakrij ruƒçni unos';
  });
})();

function resolvePrimalacId(){
  const row  = document.getElementById('manualRow');
  const sel  = document.getElementById('selPrimalac');
  const manual = document.getElementById('manualId');

  // ako je ruƒçni unos vidljiv i ima vrednost ‚Äì koristi ga
  if (row && row.style.display !== 'none' && manual && manual.value.trim()){
    const v = manual.value.trim();
    return /^\d+$/.test(v) ? Number(v) : null;
  }
  // inaƒçe koristi <select>
  const val = sel ? sel.value : '';
  return val && /^\d+$/.test(val) ? Number(val) : null;
}

/* ---------- Slanje poruke ---------- */
async function posaljiPoruku(){
  const btn = document.getElementById('btnSend');
  const primalacId = resolvePrimalacId();
  const sadrzaj = (document.getElementById('inpSadrzaj').value||'').trim();

  if(!primalacId || !sadrzaj){
    showMsg('sendMsg', !primalacId ? 'Izaberi primaoca ili unesi ID.' : 'Unesi sadr≈æaj poruke.');
    return;
  }

  btn.disabled = true; showMsg('sendMsg', '≈†aljem‚Ä¶');
  try{
    await fetchJSON('/api/poruke', {
      method: 'POST',
      headers: { ...authHeader(), 'Content-Type':'application/json' },
      body: JSON.stringify({ primalacId, sadrzaj })
    }, 'sendMsg');
    showMsg('sendMsg', 'Poruka poslata ‚úÖ');
    document.getElementById('inpSadrzaj').value = '';
    await loadPoruke();
  }catch(_){
    // poruka veƒá prikazana u #sendMsg
  }finally{
    btn.disabled=false;
  }
}

/* ---------- init ---------- */
window.addEventListener('load', ()=>{
  loadPoruke();
  loadPrimaoci();
  document.getElementById('btnSend').addEventListener('click', posaljiPoruku);
});
</script>
</body>
</html>
