package com.veterinarska.stanica.security;

import java.util.List;
import org.springframework.security.core.userdetails.*;
import org.springframework.stereotype.Service;
import com.veterinarska.stanica.model.Korisnik;
import com.veterinarska.stanica.repository.KorisnikRepository;

@Service
public class CustomUserDetailsService implements UserDetailsService {

    private final KorisnikRepository repo;

    public CustomUserDetailsService(KorisnikRepository repo) {
        this.repo = repo;
    }

    @Override
    public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException {
        Korisnik k = repo.findByEmail(email)
                .orElseThrow(() -> new UsernameNotFoundException("Korisnik ne postoji"));
        String role = "ROLE_" + k.getUloga().name(); // npr. ROLE_ADMIN
        return User.withUsername(k.getEmail())
                   .password(k.getLozinka()) // veÄ‡ je bcrypt
                   .authorities(List.of(() -> role))
                   .accountExpired(false).accountLocked(false)
                   .credentialsExpired(false).disabled(!Boolean.TRUE.equals(k.getAktivan()))
                   .build();
    }
}
