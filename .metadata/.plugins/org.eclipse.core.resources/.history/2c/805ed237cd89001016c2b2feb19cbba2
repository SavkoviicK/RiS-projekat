<%@ page contentType="text/html; charset=UTF-8" %>
<!DOCTYPE html>
<html lang="sr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Poruke</title>
  <style>
    body{font-family:system-ui,Arial;margin:0;background:#f7f9fb}
    header{display:flex;align-items:center;justify-content:space-between;gap:16px;
           padding:16px 24px;background:#fff;border-bottom:1px solid #e6e6e6}
    .wrap{max-width:900px;margin:24px auto;padding:0 16px}
    nav a{margin-right:12px;text-decoration:none;color:#0b5ed7}
    table{width:100%;border-collapse:collapse;background:#fff;border:1px solid #e6e6e6}
    th,td{padding:10px;border-top:1px solid #eee;text-align:left}
    thead tr{background:#f2f4f7}
    .card{background:#fff;border:1px solid #e6e6e6;border-radius:12px;padding:16px;margin:16px 0}
    .row{display:flex;gap:12px;align-items:center}
    input,textarea{width:100%;padding:10px;border:1px solid #dcdcdc;border-radius:8px;background:#fff}
    button{background:#0b5ed7;color:#fff;border:none;border-radius:8px;padding:10px 16px;cursor:pointer}
    button:disabled{opacity:.6;cursor:not-allowed}
    .muted{color:#666;font-size:.9em}
  </style>
  <script defer src="/js/auth.js"></script>
</head>
<body>
<header>
  <div style="display:flex;align-items:center;gap:12px">
    <img src="/img/logo.png" alt="Logo" style="height:46px" />
    <strong>Veterinarska stanica</strong>
  </div>
  <nav>
    <a href="/">Poƒçetna</a>
    <a href="/ljubimci">Ljubimci</a>
    <a href="/pregledi">Pregledi</a>
    <a href="/poruke">Poruke</a>
    <a id="navIzvestaji" href="/izvestaji" style="display:none">Izve≈°taji</a>
    <!-- namerno NEMA ‚ÄúPrijava/Registracija‚Äù; to re≈°ava userBox -->
  </nav>
  <div id="userBox"><span id="userInfo"></span>
    <button id="btnLogout" style="display:none;margin-left:8px">Odjava</button>
  </div>
</header>

<div class="wrap">
  <h1>üí¨ Poruke</h1>

  <div id="info" class="muted" style="margin:6px 0 16px 0"></div>

  <!-- PRIV ZONA: slanje + lista poruka; sakriveno dok nema JWT/pristupa -->
  <div id="privPoruke" style="display:none">
    <!-- Slanje poruke -->
    <div id="sendCard" class="card">
      <h3>Po≈°alji novu poruku</h3>
      <div class="row">
        <label style="min-width:120px">Primalac</label>
        <input id="inpPrimalac" list="korisnickiList" placeholder="npr. Ana" />
        <datalist id = "korisniciList"></datalist>
      </div>
      <div style="height:8px"></div>
      <div>
        <textarea id="inpSadrzaj" rows="3" placeholder="Unesi poruku..."></textarea>
      </div>
      <div style="height:12px"></div>
      <button id="btnSend">Po≈°alji</button>
      <span id="sendMsg" class="muted" style="margin-left:8px"></span>
    </div>

    <!-- Lista poruka -->
    <div class="card">
      <h3>Va≈°e poruke</h3>
      <div id="listMsg" class="muted" style="margin-bottom:8px">Uƒçitavam‚Ä¶</div>
      <table id="tbl">
        <thead>
          <tr>
            <th>ID</th>
            <th>Od</th>
            <th>Za</th>
            <th>Sadr≈æaj</th>
            <th>Datum</th>
          </tr>
        </thead>
        <tbody id="rows">
          <tr><td colspan="5">Uƒçitavam‚Ä¶</td></tr>
        </tbody>
      </table>
    </div>
  </div>
</div>

<script>
// Header info + ‚ÄúIzve≈°taji‚Äù samo ADMIN-u
(function headerPaint(){
  const info=document.getElementById('userInfo');
  const btn=document.getElementById('btnLogout');
  const navIzv=document.getElementById('navIzvestaji');

  const t=localStorage.getItem('jwt');
  const roles=JSON.parse(localStorage.getItem('roles')||'[]');

  if(t){
    const txt = roles.length ? 'Prijavljen ('+roles.map(r=>r.authority).join(', ')+')' : 'Prijavljen';
    info.textContent = txt;
    btn.style.display='inline-block';
    btn.onclick=()=>{ logout(); location.href='/'; };
  }else{
    info.innerHTML='<a href="/prijava">Prijavi se</a>';
    btn.style.display='none';
  }

  const isAdmin = roles.some(r=>r.authority==='ROLE_ADMIN');
  if(navIzv) navIzv.style.display = isAdmin ? 'inline' : 'none';
})();

function fmtDate(val){
  if(!val) return '';
  try{
    const d = new Date(val);
    if (Number.isNaN(d.getTime())) return String(val);
    return d.toLocaleString();
  }catch(_){ return String(val); }
}

function canUseMessages(){
  const roles = JSON.parse(localStorage.getItem('roles')||'[]').map(r=>r.authority);
  return roles.includes('ROLE_VLASNIK') || roles.includes('ROLE_VETERINAR');
}

async function loadPoruke(){
  const rows  = document.getElementById('rows');
  const listMsg = document.getElementById('listMsg');
  const priv  = document.getElementById('privPoruke');
  const info  = document.getElementById('info');
  const sendCard = document.getElementById('sendCard');

  // Bez prijave
  if(!localStorage.getItem('jwt')){
    info.innerHTML = 'Niste prijavljeni. <a href="/prijava">Prijavite se</a>.';
    if (priv) priv.style.display='none';
    return;
  }

  // Dozvole: samo VLASNIK/VETERINAR
  if (!canUseMessages()){
    info.textContent = 'Ova sekcija je dostupna samo vlasnicima i veterinarima.';
    if (priv) priv.style.display='none';
    return;
  }

  // imamo token i ulogu ‚Üí prika≈æi privatnu zonu i uƒçitaj
  info.textContent = '';
  if (priv) priv.style.display='';
  if (sendCard) sendCard.style.display=''; // po potrebi mo≈æe≈° dodatno ograniƒçiti slanje

  rows.innerHTML = '<tr><td colspan="5">Uƒçitavam‚Ä¶</td></tr>';

  try{
    const data = await fetchJSON('/api/poruke', { headers: authHeader() }, 'listMsg', null, { appendServerText:false });
    if(!Array.isArray(data) || data.length===0){
      listMsg.textContent = 'Nema poruka.';
      rows.innerHTML = '';
      return;
    }
    listMsg.textContent = '';
    rows.innerHTML = data.map(function(p){
      return '<tr>'
        + '<td>' + (p.id ?? '') + '</td>'
        + '<td>' + (p.posiljalacEmail ? p.posiljalacEmail : ('#' + (p.posiljalacId ?? ''))) + '</td>'
        + '<td>' + (p.primalacEmail   ? p.primalacEmail   : ('#' + (p.primalacId   ?? ''))) + '</td>'
        + '<td>' + (p.sadrzaj ?? '') + '</td>'
        + '<td>' + fmtDate(p.vreme || p.datum) + '</td>'
        + '</tr>';
    }).join('');
  }catch(_){
    // npr. 403 ‚Üí sakrij privatnu zonu
    if (priv) priv.style.display='none';
    rows.innerHTML = '';
  }
}

let korisniciMapa = new Map(); // email -> {id, ime, email, uloge[]}

/** Vrati nazive uloga kao array stringova bez prefiksa ROLE_ */
function currentRoleNames(){
  try{
    const roles = JSON.parse(localStorage.getItem('roles')||'[]');
    return roles.map(r => String(r.authority||r).replace(/^ROLE_/, ''));
  }catch(_){ return []; }
}

/** Uƒçitaj listu korisnika (iz svog API-ja) i popuni datalist.
 *  Ako ima≈° endpoint koji mo≈æe filtrirati npr. /api/korisnici?rola=VETERINAR ‚Äî super.
 *  Ako nema, uzeƒáemo sve pa filtrirati na klijentu. */
async function loadPrimaoci(){
  const inp = document.getElementById('inpPrimalac');
  const dl  = document.getElementById('korisniciList');
  if (!inp || !dl) return;

  korisniciMapa.clear();
  dl.innerHTML = ''; // ƒçisto

  // Ako nije prijavljen, nema smisla ni≈°ta da radimo
  if (!localStorage.getItem('jwt')) return;

  // 1) Dovuci sve korisnike (promijeni URL ako ti je drugaƒçiji)
  let lista = [];
  try{
    // Ako ti backend podr≈æava filter, mo≈æe≈° prvo poku≈°ati ciljano:
    // npr. vlasnik vidi veterinare; veterinar vidi vlasnike; admin vidi sve
    const myRoles = currentRoleNames(); // npr ["VLASNIK"] ili ["VETERINAR"] ili ["ADMIN"]
    let url = '/api/korisnici'; // promijeni ako ti je drugo
    // (Opciono) Ako ima≈° serverski filter: dodaj ?rola=VETERINAR ili VLASNIK
    // if (myRoles.includes('VLASNIK')) url = '/api/korisnici?rola=VETERINAR';
    // if (myRoles.includes('VETERINAR')) url = '/api/korisnici?rola=VLASNIK';

    lista = await fetchJSON(url, { headers: authHeader() }, 'listMsg');
  }catch(_){
    // poruka veƒá ispisana; samo odustani
    return;
  }

  // 2) (Ako nema serverskog filtera) filtriraj klijentski:
  const myRoles = currentRoleNames();
  let ciljRola = null;
  if (myRoles.includes('VLASNIK')) ciljRola = 'VETERINAR';
  else if (myRoles.includes('VETERINAR')) ciljRola = 'VLASNIK';
  // ADMIN vidi sve (bez filtera)

  const filtrirano = Array.isArray(lista) ? lista.filter(k => {
    if (!ciljRola) return true;
    const u = (k.uloge||k.roles||k.authorities||[]).map(r => String(r.authority||r).replace(/^ROLE_/, ''));
    return u.includes(ciljRola);
  }) : [];

  // 3) Napuni datalist i mapu
  filtrirano.forEach(k => {
    const id = k.id ?? k.userId ?? k.korisnikId;
    const email = k.email || k.username || k.korisnikEmail;
    const ime = k.ime ? (k.prezime ? (k.ime + ' ' + k.prezime) : k.ime) : (k.naziv || '');
    if (!id || !email) return;

    korisniciMapa.set(email, { id, email, ime });
    const opt = document.createElement('option');
    opt.value = email; // unos ƒáe upisati email
    opt.label = (ime ? (ime + ' ‚Äì ') : '') + email + ' (#' + id + ')';
    dl.appendChild(opt);
  });
}

/** Pretvori unos iz inpPrimalac (email ili direktan ID) u ID */
function resolvePrimalacId(){
  const val = (document.getElementById('inpPrimalac')?.value || '').trim();
  if (!val) return null;

  // Ako je upisan ƒçist broj, koristi ga kao ID
  if (/^\d+$/.test(val)) return Number(val);

  // Inaƒçe oƒçekujemo email koji je u mapi
  const rec = korisniciMapa.get(val);
  return rec ? rec.id : null;
}

async function posaljiPoruku(){
  const btn = document.getElementById('btnSend');
  const primalacId = resolvePrimalacId(); 
  const sadrzaj = (document.getElementById('inpSadrzaj').value||'').trim();

  if(!primalacId || !sadrzaj){
    showMsg('sendMsg', !primalacId ? 'Izaberi primaoca iz liste.' : 'Unesi sadr≈æaj poruke.');
    return;
  }

  btn.disabled = true; showMsg('sendMsg', '≈†aljem‚Ä¶');
  try{
    await fetchJSON('/api/poruke', {
      method: 'POST',
      headers: { ...authHeader(), 'Content-Type':'application/json' },
      body: JSON.stringify({ primalacId, sadrzaj })
    }, 'sendMsg', null, { appendServerText:false });
    showMsg('sendMsg', 'Poruka poslata ‚úÖ');
    document.getElementById('inpSadrzaj').value = '';
    await loadPoruke();
  }catch(_){
    // poruka veƒá prikazana u #sendMsg
  }finally{
    btn.disabled=false;
  }
}

window.addEventListener('load', ()=>{
  loadPoruke();
  document.getElementById('btnSend').addEventListener('click', posaljiPoruku);
});
</script>
</body>
</html>
