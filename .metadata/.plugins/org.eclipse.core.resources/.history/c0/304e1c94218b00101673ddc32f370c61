<%@ page contentType="text/html; charset=UTF-8" %>
<!DOCTYPE html>
<html lang="sr">
<head>
  <meta charset="UTF-8">
  <title>Prijatelji</title>
  <style>
    body { font-family: Arial, sans-serif; margin:0; background:#f7f9fb; }
    .wrap { max-width: 900px; margin: 24px auto; padding: 0 16px; }
    table { width: 100%; border-collapse: collapse; background:#fff; border:1px solid #e6e6e6; }
    th, td { padding: 10px; border-top: 1px solid #eee; text-align: left; }
    thead tr { background: #f2f4f7; }
    h1 { margin: 0 0 12px 0; }
    h2 { margin: 24px 0 10px; }
    .row { display:flex; gap:10px; align-items:center; flex-wrap:wrap; }
    select { padding:8px; border:1px solid #ccc; border-radius:6px; min-width:260px; }
    .btn { padding: 6px 12px; border: none; border-radius: 6px; cursor: pointer; }
    .btn-accept { background: #4CAF50; color: #fff; }
    .btn-decline { background: #f44336; color: #fff; }
    .btn-send { background: #0b5ed7; color:#fff; }
    .muted { color:#666; font-size:.92em; }
    .note { margin:6px 0 14px; }
    .warn { color:#b33; font-weight:600; }
  </style>
  <script defer src="/js/auth.js"></script>
</head>
<body>
<div class="wrap">
  <h1>üë• Prijatelji</h1>

  <div class="note muted">
    Vlasnik mo≈æe slati poruke <strong>vlasniku</strong> samo ako su prijatelji. Sa <strong>veterinarom</strong> i <strong>adminom</strong> mo≈æe i bez prijateljstva.
  </div>

  <!-- Slanje zahteva ‚Äì izbor iz liste svih vlasnika koji nisu prijatelji/pending -->
  <form class="row" id="frmZahtev" onsubmit="return posaljiZahtev(event)">
    <label><strong>Po≈°alji zahtev vlasniku:</strong></label>
    <select id="selVlasnik" required>
      <option value="">‚Äî izaberi vlasnika ‚Äî</option>
    </select>
    <button class="btn btn-send" type="submit">Po≈°alji zahtev</button>
    <span id="msgZahtev" class="muted"></span>
  </form>

  <h2>Zahtevi za prijateljstvo</h2>
  <table>
    <thead>
      <tr><th>Od</th><th>Akcija</th></tr>
    </thead>
    <tbody id="tbodyZahtevi">
      <tr><td colspan="2" class="muted">Uƒçitavam‚Ä¶</td></tr>
    </tbody>
  </table>

  <h2>Moji prijatelji</h2>
  <table>
    <thead>
      <tr><th>Ime</th><th>Email</th><th>Poruke</th></tr>
    </thead>
    <tbody id="tbodyPrijatelji">
      <tr><td colspan="3" class="muted">Uƒçitavam‚Ä¶</td></tr>
    </tbody>
  </table>
</div>

<script>
// --- Helpers ---
function authHeader(){ const t=localStorage.getItem('jwt'); return t?{'Authorization':'Bearer '+t}:{ }; }
async function whoAmI(){
  try{
    const res = await fetch('/api/whoami', { headers: authHeader() });
    if(!res.ok) return { id:null, email:null };
    const me = await res.json();
    return {
      id: me.id ?? me.userId ?? me.korisnikId ?? me.vlasnikId ?? me.veterinarId ?? null,
      email: me.email ?? me.username ?? me.korisnikEmail ?? null
    };
  }catch(_){ return { id:null, email:null }; }
}

// --- Slanje zahteva ---
async function posaljiZahtev(ev){
  ev.preventDefault();
  const sel = document.getElementById('selVlasnik');
  const msg = document.getElementById('msgZahtev');
  const id  = sel.value;
  if(!id){ msg.textContent='Izaberi vlasnika.'; return false; }
  msg.textContent='≈†aljem‚Ä¶';
  try{
    const res = await fetch('/api/prijatelji/zahtev?primaocId='+encodeURIComponent(id),
                            { method:'POST', headers: authHeader() });
    const txt = await res.text();
    if(!res.ok) throw new Error(txt||('HTTP '+res.status));
    msg.textContent='Poslato ‚úÖ';
    await ucitajSve();
    await popuniVlasnike(); // da se novi pending izbaci iz liste
  }catch(e){
    msg.innerHTML = '<span class="warn">Gre≈°ka:</span> '+(e.message||'');
  }
  return false;
}

// --- Uƒçitavanje zahteva ---
async function ucitajZahteve(){
  const tbody = document.getElementById('tbodyZahtevi');
  try{
    const res = await fetch('/api/prijatelji/na-cekaju', { headers: authHeader() });
    if(!res.ok) throw new Error(await res.text());
    const list = await res.json();

    tbody.innerHTML='';
    if(!Array.isArray(list)||list.length===0){
      tbody.innerHTML='<tr><td colspan="2">Nema novih zahteva</td></tr>';
      return;
    }
    for (const z of list) {
      const ime = (z.posiljalac && (z.posiljalac.ime || z.posiljalac.naziv)) || '';
      const email = (z.posiljalac && z.posiljalac.email) || '';
      const label = (ime?ime+' ':'') + (email?('('+email+')'):'');
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${label||('Korisnik #'+(z.posiljalac?.id||'?'))}</td>
        <td>
          <button class="btn btn-accept" onclick="return prihvatiOdbij(${z.id}, true)">Prihvati</button>
          <button class="btn btn-decline" onclick="return prihvatiOdbij(${z.id}, false)">Odbij</button>
        </td>`;
      tbody.appendChild(tr);
    }

  }catch(e){
    tbody.innerHTML='<tr><td colspan="2" class="muted">Gre≈°ka pri uƒçitavanju: '+(e.message||'')+'</td></tr>';
  }
}

async function prihvatiOdbij(zahtevId, prihvati){
  try{
    const res = await fetch(`/api/prijatelji/odgovor?zahtevId=${zahtevId}&prihvati=${prihvati}`, {
      method: 'POST',
      headers: authHeader()
    });
    const text = await res.text();
    if(!res.ok){
      alert('Gre≈°ka ('+res.status+'): ' + text);
      return false;
    }
    alert(text || 'Zahtev je a≈æuriran.');
    await ucitajSve();
    await popuniVlasnike();
  }catch(e){
    alert('Gre≈°ka (JS): ' + (e.message||''));
  }
  return false;
}

// --- Uƒçitavanje prijatelja ---
async function ucitajPrijatelje(){
  const tbody = document.getElementById('tbodyPrijatelji');
  try{
    const res = await fetch('/api/prijatelji', { headers: authHeader() });
    if(!res.ok) throw new Error(await res.text());
    const list = await res.json();

    tbody.innerHTML='';
    if(!Array.isArray(list)||list.length===0){
      tbody.innerHTML='<tr><td colspan="3">Jo≈° nema≈° prijatelja</td></tr>';
      return;
    }
    for(const f of list){
      const ime = f.ime || f.naziv || '';
      const email = f.email || '';
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${ime}</td>
        <td>${email}</td>
        <td><a class="btn btn-send" href="/poruke">Otvori chat</a></td>`;
      tbody.appendChild(tr);
    }
  }catch(e){
    tbody.innerHTML='<tr><td colspan="3" class="muted">Gre≈°ka pri uƒçitavanju: '+(e.message||'')+'</td></tr>';
  }
}

// --- Dropdown vlasnika (koji NISU prijatelji, NISU pending i NISU "ja") ---
async function popuniVlasnike(){
  const sel = document.getElementById('selVlasnik');
  if(!sel) return;

  const me = await whoAmI();

  const [prijRes, pendRes] = await Promise.all([
    fetch('/api/prijatelji', { headers: authHeader() }),
    fetch('/api/prijatelji/na-cekaju', { headers: authHeader() })
  ]);

  const prijatelji = prijRes.ok ? await prijRes.json() : [];
  const pendinzi   = pendRes.ok ? await pendRes.json() : [];

  const prijateljIds = new Set((Array.isArray(prijatelji)?prijatelji:[]).map(f => f.id));
  const pendingPosiljaoci = new Set((Array.isArray(pendinzi)?pendinzi:[]).map(z => z.posiljalac?.id));

  // Svi vlasnici (backend neka podr≈æi ?rola=VLASNIK)
  const allRes = await fetch('/api/korisnici?rola=VLASNIK', { headers: authHeader() });
  const svi = allRes.ok ? await allRes.json() : [];

  const kandidati = (Array.isArray(svi)?svi:[])
    .map(u => ({
      id: u.id ?? u.userId ?? u.korisnikId ?? u.vlasnikId,
      ime: u.ime || u.naziv || '',
      email: u.email || u.username || ''
    }))
    .filter(u =>
      u.id &&
      !(me.id && u.id === me.id) &&
      !(me.email && u.email && u.email.toLowerCase() === me.email.toLowerCase()) &&
      !prijateljIds.has(u.id) &&
      !pendingPosiljaoci.has(u.id)
    );

  sel.innerHTML = '<option value="">‚Äî izaberi vlasnika ‚Äî</option>';
  if(!kandidati.length){
    const opt = document.createElement('option');
    opt.value=''; opt.textContent='Nema dostupnih (svi su veƒá prijatelji ili pending)';
    sel.appendChild(opt);
    sel.disabled=true;
    return;
  }
  sel.disabled=false;
  for(const k of kandidati){
    const opt = document.createElement('option');
    opt.value = String(k.id);
    opt.textContent = (k.ime ? (k.ime+' ‚Äì ') : '') + k.email + ' (#'+k.id+')';
    sel.appendChild(opt);
  }
}

// --- Orkestracija ---
async function ucitajSve(){ await Promise.all([ ucitajZahteve(), ucitajPrijatelje() ]); }

window.addEventListener('load', async ()=>{
  if(!localStorage.getItem('jwt')){
    document.getElementById('tbodyZahtevi').innerHTML='<tr><td colspan="2">Prijavite se.</td></tr>';
    document.getElementById('tbodyPrijatelji').innerHTML='<tr><td colspan="3">Prijavite se.</td></tr>';
    return;
  }
  await ucitajSve();
  await popuniVlasnike();
});
</script>
</body>
</html>
